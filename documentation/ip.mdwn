[[!meta title="Internet protocols configuration"]]
[[!meta description="Includes information about IP addresses and routing"]]

[[!toc levels=3]]

# Device configuration

Before configuring your device, you need to choose an IP. To do this, head for the [[policy/numbering]] page and choose an IP address. Document it in the [[policy/numbering]] page and in your [[nodes]] page, unless of course the address is autoconfigured.

This section documents how you can configure your device to use the IP chosen.

## OpenWRT

To configure the IP address on a OpenWRT device, use this:

    uci set network.lan.ipaddr=172.16.0.123
    uci set network.lan.netmask=255.240.0.0
    uci set network.lan.gateway=172.16.0.1
    uci set network.lan.dns=172.16.0.1

You may also commonly disable the DHCP server on LAN, so as to not
interfere with another router:

    uci set dhcp.lan.ignore=1

[!] Warning: the above will make it more difficult to reach the
machine again after a reboot. You will need to statically configure
your laptop if it is the only device connected to the device, for
example.

Commit changes and reboot:

    uci commit ; reboot & exit

## FreeBSD

In `rc.conf`:

    ifconfig_vr0="inet 172.16.0.42 netmask 255.240.0.0"
    defaultrouter="172.16.0.1"

If this host is to be a router, use instead:

    ifconfig_vr0="inet 172.16.0.1"
    gateway_enable="YES"

### IPv6

Here we assume that behind your mesh node, you have an "authoritative"
router which has an IPv6 netblock it wants to announce on the
mesh. This can be done with the following configurations:

In `rc.conf`:

    ipv6_ifconfig_vr2="fd64:2c08:9fa7::1/64"
    rtadvd_enable="YES"
    rtadvd_interfaces="vr2"

This can be implemented immediatly with:

    ifconfig vr2 inet6 fd64:2c08:9fa7::1/64
    rtadvd vr2

# Routing issues

We can already observe a basic problem here: globally routable IPs are
not easily reachable from the mesh without adding static routes. This
is something [[babel]] can fix.

Another option is to use `pinfoflags` field in `rtadvd.conf` to unset the second bit, the `autonomous address-configuration flag` (section 4.6.2 in [[!rfc 2461]]), which would disable the use of that prefix in address autoconfiguration while at the same time announcing the route. To be tested.
