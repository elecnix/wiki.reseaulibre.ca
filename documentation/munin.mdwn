(!) Notez que des stats sont montrées dans la page [[stats]].

[[!toc]]

## Connectivité Ad-Hoc

Pour activer les fonctionnalités de monitorage sur un appareil OpenWRT, on peut installer le paquet "muninlite" qui est beaucoup plus léger que le script habituel munin-node et qui ne dépend pas de Perl.

[[!format txt """
$ opkg update
Downloading ...
$ opkg install muninlite
Installing xinetd (2.3.15-1) to root...
Configuring xinetd.
Installing muninlite (1.0.4-3) to root...
Configuring muninlite.
"""]]

Si on veut que le service Munin soit accessible par IPv6, il faut ajouter une option "flags = IPv6" dans le fichier /etc/xinetd.d/munin. Dans tous les cas, on active et démarre xinetd:

    /etc/init.d/xinetd enable
    /etc/init.d/xinetd start

Une fois installé, on doit activer la recherche de "plugins" en éditant le script `/usr/sbin/munin-node`:

[[!format patch """
-PLUGINPATTERN=$(dirname $0)"/munin-node-plugin.d/*"
+PLUGINPATTERN="/etc/munin/plugins/*"

# Remove unwanted plugins from this list
-PLUGINS="cpu if_ if_err_ load memory processes netstat uptime interrupts irqstats"
+PLUGINS="cpu if_ if_err_ load memory processes netstat uptime interrupts irqstats plugindir_"
"""]]

On peut ensuite télécharger et placer le script suivant dans le répertoire /etc/munin/plugins et le rendre exécutable: [[adhoc_rssi.sh]]

    wget http://wiki.reseaulibre.ca/documentation/munin/adhoc_rssi.sh
    chmod +x adhoc_rssi.sh
    mkdir -p /etc/munin/plugins
    mv adhoc_rssi.sh /etc/munin/plugins/adhoc_rssi

On peut vérifier le bon fonctionnement de Munin et le contenu de la liste des plugins disponibles:

    $ telnet localhost 4949
    # munin node at pinxo
    list
    cpu if_wlan0 if_eth0 if_br_lan if_err_wlan0 if_err_eth0 if_err_br_lan load memory processes uptime interrupts irqstats adhoc_rssi
    fetch adhoc_rssi
    signaldc:9f:db:00:13:79.value -55
    signal00:27:22:72:cf:9f.value -39
    .
    quit

## Quagga/Babeld

Le logiciel de routage Quagga possède une interface de contrôle qui rend le monitorage plus facile que si on utilisait le serveur Babeld standard. Par exemple, le script pour munin-node ci-dessous (tiré de [[https://dn42.net/trac/wiki/Statistics]], voir ce site pour les instructions) permet de tracer le nombre de routes fournies par le réseau:

[[!format txt """
#!/bin/sh

#
#
# Munin Plugin to show quagga babel routes

# Standard Config Section Begin ##
  if [ "$1" = "autoconf" ]; then
        echo yes
        exit 0
  fi

  if [ "$1" = "config" ]; then

       echo 'graph_title Quagga Babel Routes'
       echo 'graph_args --base 1000 -l 0'
       echo 'graph_scale yes'
       echo 'graph_vlabel Received routes via Babel'
       echo 'graph_category network'
       echo 'babelroutes.label Routes'
       echo 'graph_info Route information provided by quagga daemon via vtysh'
       exit 0
  fi
# Standard Config Section End ####

# Measure Section Begin ##########
  data=$(vtysh -d babeld -c "show babel database"|grep installed|wc -l)

  if [ "$data" = "" ]; then
     echo babelroutes.value    0
  else
     echo babelroutes.value    $data
  fi
# Measure Section ##########
"""]]

Un exemple d'utilisation de ce script est disponible sur [[http://www.deuxpi.ca/munin/deuxpi.ca/mail.deuxpi.ca/quagga_babel.html]].
