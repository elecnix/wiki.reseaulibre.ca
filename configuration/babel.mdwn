[[!meta title="Babel configuration notes"]]

Before following those steps, we assume that you have [[flashed|flashing]] your device and created a link with another device, for example with the [[ad-hoc]] configuration.

Once you have followed this configuration, make sure you have a persistent [[IP configuration|ip]] by following the [[ip configuration pages|ip]].

(!) We are in the process of testing
[Babel](http://www.pps.univ-paris-diderot.fr/~jch/software/babel/) to
replace [[batman]]. A few of us are running both in dual stack, but we
are likely to switch to babel after this evaluation period.

[[!toc levels=3]]

Installation
============

OpenWRT
-------

Install babel:

    opkg install babeld

Configure the wireless interface with a test IP (follow the [[ip configuration|ip]] to make those settings peristent, but make sure to use `255.255.255.255` as a netmask):

    ifconfig wlan0 up 172.16.0.43/32

To start babel on the console for testing:

    babeld -d1 wlan0

Note how you specify the interface names directly on the commandline. The output should already show you neighbors, if there are any.

To make sure that babel starts on boot on the wireless interface:

    /etc/init.d/babeld enable
    uci delete babeld.wlan.ignore

(!) Do not forget to save your changes!

    uci commit

To announce routes on the wired intefaces too:

    uci delete babeld.lan.ignore

If you had previously installed Batman, you will need to remove the
wireless interface from the batman bridge, and add it to babel:

    batctl if del wlan0
    uci set babeld.wlan0=interface

/!\ Warning: this may break your existing connexion and require a
reboot.

Here's a basic UCI config, taken from [[nodes/plastik]].

    package babeld
    
    config general
            option local_server '33123'
    
    config filter
            option ignore 'true'
    
    config interface 'wlan'

    config interface 'lan'

Note that we do not configure routing rules through UCI, but instead
rely on the `/etc/babeld.conf` file, see below for config samples.

Debian
------

0. install package: `apt-get install babeld`
1. stop network manager
2. setup [[ad-hoc]] and babeld

        ifconfig wlan0 down
        iwconfig wlan0 mode ad-hoc essid reseaulibre.ca ap 02:CA:FF:EE:BA:BE channel 9
        ifconfig wlan0 up 172.16.0.43/32
        babeld -D wlan0

See [[policy/numbering]] to choose the proper IP above, but note the netmask (`255.255.255.255` or `/32`) that needs to be defined for babel to work.

###Network Manager

/!\ If you are currently using Network Manager on an IPv6 network, there seems to be a bug which makes Babel publish all routing cache entries. This shows up as huge routing tables full of static routes that may look a bit like this:

    2001:6f8:1055:deb::80 via fe80::94d6:9eff:fecc:2494 dev bat0  proto 42  metric 1024
    2607:f8b0:4007:801::100f via fe80::94d6:9eff:fecc:2494 dev bat0  proto 42  metric 1024
    2607:f8b0:400b:800::1017 via fe80::94d6:9eff:fecc:2494 dev bat0  proto 42  metric 1024
    2607:f8b0:400b:801::1000 via fe80::94d6:9eff:fecc:2494 dev bat0  proto 42  metric 1024
    2607:f8b0:400b:801::1001 via fe80::94d6:9eff:fecc:2494 dev bat0  proto 42  metric 1024
    2607:f8b0:400b:801::1002 via fe80::94d6:9eff:fecc:2494 dev bat0  proto 42  metric 1024
    ...

The possible workaround is to open the Network settings, select the IPv6 parameters page of your connection, click the Routes button and check "Ignore automatically obtained routes".

This bug is described at <https://bugzilla.gnome.org/show_bug.cgi?id=682616>

FreeBSD
-------

The FreeBSD port needs to be updated, as it is running an old version
of the software (1.2, 1.3.3 is current as of this writing).

Updating the port is pretty trivial. And I have submitted it in the
"GNATS" bug tracking system.

There are no startup scripts so you need to do that on your own. Also,
contrary to usual BSD practices, the port's configuration file is in
`/etc/babeld.conf` (instead of `/usr/local/etc`).

Optional
--------

`ahcpd -D wlan0` can be used to distribute IPs over the network (without announcing a gateway).

Configuration
=============

Regardless of the install method or platform, you need a
`babeld.conf`. This will decide which routes you will announce and
accept and so on, so it is rather important.

Basic open configuration
------------------------

For testing (and for open relays), this is the simplest `babeld.conf` configuration that will allow everything:

    redistribute metric 128

This will redistribute all your routes with a non-zero metric so they
do not override your default configuration.

It is useful to remember this, as it can also be passed on the
commandline directly, as such:

    bababeld -d1 -C 'redistribute metric 128' wlan0

Another common configuration is to refuse the default route, which is:

    in ip 0.0.0.0/32 le 0 deny

This is especially important on routers that *do* have network access,
as babel will happily override existing routes in certain
configurations. See the babeld manpage for more information on those
rules.

Complex router
--------------

Here's my configuration for [[nodes/roadkiller]]:

[[!format txt """
# mesh IPv6
redistribute local ip fd64:2c08:9fa7:1::1/128 metric 128
redistribute local ip fd64:2c08:9fa7::1/128 metric 128
redistribute ip fd64:2c08:9fa7::/48 metric 128
# mesh IPv4
redistribute local ip 172.16.0.1/32 metric 128
redistribute ip 172.16.0.0/12 ge 13 metric 128
# public IPv6
redistribute local ip 2001:1928:1:9::/128 metric 128
redistribute ip 2001:1928:1:9::/64 metric 128
# public IPv4
redistribute local ip 72.0.72.144/32 metric 128
# default route
redistribute ip 0.0.0.0/0 le 0 metric 128
# IPv6 default route
redistribute ip ::/4 metric 128
# refuse anything else not explicitely allowed
redistribute local deny
redistribute deny
"""]]

Other sample configurations
---------------------------

We are working with upstream to have a good default configuration
provided with the package, see
[this discussion](http://article.gmane.org/gmane.network.routing.babel.user/1049)
and the `babeld.conf.sample` file in anarcat's repository:

    git://src.anarcat.ath.cx/babeld

See also [OpenWRT's sample config](https://dev.openwrt.org/browser/packages/net/babel/files/babeld.conf).


Advantages of Babel over BATMAN
===============================

 1. no kernel module necessary, which means:
 2. no need to chase the OpenWRT trunk, and:
 3. multi-platform support (e.g. FreeBSD)
 4. uses real routing tables (easier to debug)
 5. tcpdump parses babel packets properly
 6. No need to change the MTU of some network interface to 1528, which means:
 7. Network interfaces can be edited with the web interface luci (mtu field does not accept values > 1500), which means:
 8. People afraid of command line and ssh could now configure their device
 9. most importantly: allows for an heterogeneous network with different protocols, as long as they talk IP and their routes are annonced through babeld

Babel is also used by [commotionwireless](https://commotionwireless.net/).

Troubleshooting
===============

Basic operation of Babel involves talking with the regular kernel
routing table. If Babel sees a neighbor, it will add a route like this
to the routing tables:

    169.254.11.8 via 169.254.11.8 dev wlan0  proto 42 onlink

This basically means: *"I see neighbor 169.254.11.8 and it's on the
interface wlan0"*.

From the
[FAQ](http://www.pps.univ-paris-diderot.fr/~jch/software/babel/faq.html):

You can ask Babel to dump its internal tables. With the standalone daemon, send a USR1 signal to the daemon to get it to dump its tables to the log file. With the quagga version, type

    show babel interface
    show babel neighbour
    show babel route

You can also start `babeld` with `-g 33231` to enable monitoring on `33231`, for example with:

    telnet ::1 33231

To print the current status only (instead of sending the USR1 kill signal to the process):

    nc :: 33123 | awk '{ if (/add/ || /BABEL/) { print } else { exit } }'

Tcpdump groks Babel starting with version 4.2.1. Wireshark has support since version 1.6.0.

Also, during your tests, give some time for Babel to
synchronise. Things can take a few seconds (count to 10) to
synchronise.

References
==========

 * [Babel home page](http://www.pps.univ-paris-diderot.fr/~jch/software/babel/)
 * [HacDC setup notes](http://wiki.hacdc.org/index.php/Babel_Setup)
 * [[!rfc 6126]]
