[[!toc]]

# Flash the device

Download latest Reseau libre firmware file from [[http://packages.reseaulibre.ca:8080/Routeurs]]

Connect your device to your computer's ethernet port and reach the web interface.  If your device is new, follow the instructions that came with your device.  You may need to give your computer an ip address like 192.168.1.3.  Default ip of the device is usually 192.168.1.1, for ubiquiti devices 192.168.1.20.

## Ubiquiti devices

(!) The image of the firmware you should download is in "ar71xx" and is called *openwrt-ar71xx-generic-ubnt-<your device>-squashfs-factory.bin*.  The image suffixed by sysupgrade is to flash ubiquiti devices that already have openwrt installed.

Open your browser and browse to http://192.168.1.20.  The following login screen will appear.  Enter the username and password ubnt/ubnt

[[!img ubnt_login.jpg align="center" size="950x" alt="Ubiquiti login"]]

Go to the "system" tab.  In the firmware update section, browse for the image you have previously downloaded, then click "Upload"

[[!img ubnt_firmware_upgrade1.jpg align="left" size="950x" alt="Ubiquiti firmware upgrade"]]

A warning will tell you this image is a third-party software and you are installing it at your own risk.  Accept the risk and click "Update"

[[!img ubnt_firmware_update.jpg align="left" size="950x" alt="Ubiquiti firmware update"]]

Wait until the flashing is over, it may take a while.

[[!img ubnt_wait.jpg align="center" size="550x" alt="Ubiquiti wait flash"]]

# First login

Your device is now flashed.  

Flash the device through the web interface (this may take a while)

You can now reach your device through the LAN port at 192.168.1.1

Open your browser window and go to [[https://192.168.1.1]] (accept the certificate).  A warning will tell you to set your password.  Press the login button and then click the "Go to password configuration..." link in the red warning text.  

[[!img First_login.jpg align="left" size="950x" alt="First login"]]

Under the "Router Password" header, enter your password twice and the click "Save and apply" at the bottom of the page.

[[!img password_change.jpg align="left" size="950x" alt="set router password"]]

# Add reseau libre software repository

To add the custom repository to your router's software sources, in the web interface, click the "System" tab, then "Software" subtab.  In "OPKG-Configuration", there are 2 tabs, click the "Configuration" and you see the text of the opkg.conf file.  Add the following line, then click submit.  Stability and architecture depends on what image you downloaded.  It is where you got the image from.

    src reseau_libre http://packages.reseaulibre.ca:8080/Routeurs/openwrt/<stability>/<architecture>/packages

For example, here is what the file would look like for the devel branch of a nanostation device

[[!img opkg_conf.jpg align="left" size="950x" alt="opkg configuration"]]

# Change your device's hostname

You may want to change your device's hostname to be the name of your node as advertised in the [[Nodes]] page.  To do this, in the tab System, click on the System tab.  You'll see the field hostname, which is by default OpenWrt.  Change it to your node's name.  Also, you may want to change the Local time at this point by selecting a timezone.

[[!img set_hostname.jpg align="left" size="950x" alt="Change hostname"]]

Click "Save & Apply".

# Configure your network

Part of the network configuration can be done via the web interface, but for configuring the mesh itself, you'll need to access your device through ssh and follow it from there.

## Create new interfaces for the mesh interfaces

In the "Network" tab, "Interfaces" sub-tab, click the "Add new interface..." button

[[!img new_interface.jpg align="left" size="950x" alt="New interface"]]

Create an interface for each of the interfaces you plan to add to the mesh.  For instance, mesh0, mesh1, with protocol Unmanaged and select the interface it will be linked to (wlan0, eth0).  Then click "Submit".  To commit the changes, click "Save & Apply".

*Missing submit screenshot*

[[!img iface_mesh0_apply.jpg align="left" size="950x" alt="Apply new interface"]]

## Create the bat0 interface for the mesh

Like previously, add an interface that will be named bat0, with protocol Unmanaged

[[!img create_iface_bat0.jpg align="left" size="950x" alt="Create interface bat0"]]

## Configure the LAN interface

In the "Network" tab, "Interfaces" sub-tab, edit the LAN interface.
Configure your node by picking a free slot from the IP Allocation page. Here we assume you're installing a small node, so we use the 172.16.1.X/12 network.  And disable dhcp fro this interface.  Click "Save & Apply".

[[!img configure_lan.jpg align="left" size="950x" alt="Configure LAN"]]

Once you have applied those changes, the ip of your router is the one you entered.  So set your own ip to something in the 172.16.x.x subnet and reconnect to your router at 172.16.1.X

## Set the wifi

In the tab "Network", click "Wifi" and then click to edit the wireless SSID.

[[!img select_wifi.jpg align="left" size="950x" alt="Select wifi"]]

First, click on the "Enable" button to enable the wireless network, then configure the ESSID, mode and BSSID for the mesh.  For the associated network, select the interface you have previously created to manage the wireless mesh interface (maybe wlan0).

[[!img configure_wlan.jpg align="left" size="950x" alt="Configure wifi"]]


## Configure batman, through ssh

That is about all you can do with the web gui for the mesh.  You should now be able to reach your router through ssh with
   
    ssh root@172.16.1.X

Set the mtu of the mesh interfaces you have previously created to 1528.  From now on, you won't be able to edit those interfaces through the web gui, because the max value allowed in the mtu field is 1500...

    root@clarence:~# uci set network.mesh0.mtu=1528
    root@clarence:~# uci set network.mesh1.mtu=1528

Where mesh0 and mesh1 are the mesh interfaces you created earlier.  There may be only one of those.

Now add those interfaces to batman-adv

    root@clarence:~# uci set batman-adv.bat0.interfaces="mesh0 mesh1"

Set the lan bridge to the interfaces that will be part of that bridge, where bat0 will take the place of all the mesh interfaces.  For instance, if you have only the wireless interface on the mesh, the LAN bridge may be over bat0 and eth0.  If both wireless and wired interfaces are on the mesh, the LAN bridge may be only on bat0.

    root@clarence:~# uci set network.lan.ifname="bat0"

Commit your changes and reboot the device

    root@clarence:~# uci commit
    root@clarence:~# reboot & exit

# Test the mesh

Your device should now be part of the mesh.  Once rebooted, its mesh interfaces should be up and running.  If you have installed batman-adv on your computer, you may enable it and see if you can connect through the mesh.

# Secure your device

Read the guide on [[Securing your device|securing+device]] to know how to setup the firewall, protect the web gui and ssh console, etc.

