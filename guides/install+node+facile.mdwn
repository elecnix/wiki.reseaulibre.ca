[[!toc levels=2]]

# Flash the device

Download latest RÃ©seau libre firmware for your device:

* [Bullet M2](http://packages.reseaulibre.ca:8080/Routeurs/reseaulibre-openwrt/aa_beta/ar71xx/openwrt-ar71xx-generic-ubnt-bullet-m-squashfs-factory.bin)
* [Nanostation M2](http://packages.reseaulibre.ca:8080/Routeurs/reseaulibre-openwrt/aa_beta/ar71xx/openwrt-ar71xx-generic-ubnt-nano-m-squashfs-factory.bin)
* [Other devices](http://packages.reseaulibre.ca:8080/Routeurs/reseaulibre-openwrt/)

See [[hardware]] for more information about recommended devices.

Connect your device to your computer's ethernet port and reach the web interface.  If your device is new, follow the instructions that came with your device.  You may need to give your computer a static IP address such as 192.168.1.3.  The default IP of the device is usually 192.168.1.1. For Ubiquiti devices, the default IP is 192.168.1.20.

## Ubiquiti devices

(!) The image of the firmware you should download is in "ar71xx" and is called *openwrt-ar71xx-generic-ubnt-<your device>-squashfs-factory.bin*.  The image suffixed by sysupgrade is to flash ubiquiti devices that already have openwrt installed.

Open your browser and browse to http://192.168.1.20.  The following login screen will appear.  Enter the username and password ubnt/ubnt

[[!img ubnt_login.jpg align="center" size="950x" alt="Ubiquiti login"]]

Go to the "system" tab.  In the firmware update section, browse for the image you have previously downloaded, then click "Upload"

[[!img ubnt_firmware_upgrade1.jpg align="left" size="950x" alt="Ubiquiti firmware upgrade"]]

A warning will tell you this image is a third-party software and you are installing it at your own risk.  Accept the risk and click "Update"

[[!img ubnt_firmware_update.jpg align="left" size="950x" alt="Ubiquiti firmware update"]]

Wait until the flashing is over, it may take a few minutes.

[[!img ubnt_wait.jpg align="center" size="550x" alt="Ubiquiti wait flash"]]

## Upgrade an existing openwrt

(!) The image of the firmware you should download is in "ar71xx" and is called *openwrt-ar71xx-generic-ubnt-<your device>-squashfs-sysupgrade.bin*. 

Open your browser and browse to your router's ip address.  if you don't remember, it should be in your node's page ;-) 

After entering your username & password, go to the "System" tab, and "Backup / Flash firmware" sub-tab.  

You can first click on the "Generate archive" button and it will download your current router's configuration.  You may want to come back to it at some point.

In the second section titled "Flash new firmware image", browse to the firmware image you just downloaded.  If you are just upgrading the image, you should leave checked the "Keep settings" checkbox.

/!\  If you are upgrading from a previous batman configuration, it is advised to NOT keep the settings and start from scratch.  Too many things are changed and you may get yourself locked out of the device.

[[!img sysupgrad_flash.jpg align="center" size="950x" alt="Upgrade openwrt"]]

Click on the "Flash image..." button.

The next screen allows you to confirm the flashing.  When the checksum matches, click "Proceed".

[[!img sysupgrade_confirm.jpg align="center" size="950x" alt="Confirm openwrt upgrade"]]

If you kept your old settings, skip to the last sections.  Otherwise, continue for a fresh install.

# First login

You can now reach your device through the LAN port at 192.168.1.1

Open your browser window and go to [[https://192.168.1.1]] (accept the certificate).  A warning will tell you to set your password.  Press the login button (no password required) and then click the "Go to password configuration..." link in the red warning text.

[[!img First_login.jpg align="left" size="950x" alt="First login"]]

Under the "Router Password" header, enter your password twice and the click "Save and apply" at the bottom of the page.

[[!img password_change.jpg align="left" size="950x" alt="set router password"]]

# Add reseau libre software repository

To add the custom repository to your router's software sources, in the web interface, click the "System" tab, then "Software" subtab.  In "OPKG-Configuration", there are 2 tabs, click the "Configuration" and you see the text of the opkg.conf file.  Add the following line, then click submit.  Stability and architecture depends on what image you downloaded.  It is where you got the image from.

    src reseau_libre http://packages.reseaulibre.ca:8080/Routeurs/reseaulibre-openwrt/<stability>/<architecture>/packages

For example, here is what the file would look like for the relatively stable branch of a bullet or nanostation device:

    src reseau_libre http://packages.reseaulibre.ca:8080/Routeurs/reseaulibre-openwrt/aa_beta/ar71xx/packages

[[!img opkg_conf.jpg align="left" size="950x" alt="opkg configuration"]]

# Change your device's hostname

You may want to change your device's hostname to be the name of your node as advertised in the [[Nodes]] page.  To do this, in the tab System, click on the System tab.  You'll see the field hostname, which is by default OpenWrt.  Change it to your node's name.  Also, you may want to change the Local time at this point by selecting a timezone.

[[!img set_hostname.jpg align="left" size="950x" alt="Change hostname"]]

Click "Save & Apply".

# Configure your network

{i} This section applies to routers to be used as relays, with the wifi interfaces broadcasting babel (mesh) packages.  For access point see *somewhere else*.

Part of the network configuration can be done via the web interface, but for configuring the mesh itself, you'll need to access your device through ssh and follow it from there.

/!\ Ad-hoc wireless interfaces cannot be bridged, so the wifi has to be on its own interface.  

In the "Network" tab, "Interfaces" sub-tab, you will see all available interfaces.  For a router on the mesh, you typically would have one interface for the wifi and one for each ethernet port.

## Create new interfaces (if necessary)

In the "Network" tab, "Interfaces" sub-tab, click the "Add new interface..." button

[[!img new_interface.jpg align="left" size="950x" alt="New interface"]]

Create an interface for each missing one.  Usually, the only missing one is wifi, but some devices may have different needs.  Select static address for protocol.  Then click "Submit".

[[!img new_wifi.jpg align="left" size="950x" alt="Create interface wifi"]]  

On the next page, you edit the configuration.  
Configure your node by picking a free slot from the [[IP Allocation|policy/numbering]] page. Here we assume you're installing a small node, so we use the 172.16.1.X/32 network.  Notice the 255.255.255.255 ipv4 netmask.  We do this because babel will take care of the routing.  Also make sure there is no dhcp on this interface (there shouldn't be).
To commit the changes, click "Save & Apply".

[[!img config_wifi_iface.jpg align="left" size="950x" alt="Configure wifi interface"]]


## Remove the LAN bridge

By default openwrt puts the wireless interface in the LAN bridge.  But the wifi will be ad-hoc, so we need to remove it from the bridge.

In the "Network" tab, "Interfaces" sub-tab, edit the LAN interface.
In the Physical Settings sub-tab, uncheck the "create a bridge over specified interface(s)" and select only the ethernet adapter (eth0).  Click "Save & Apply".

While we're here, you may edit this interface.  If you plan to use this interface as a management interface (to manage and flash the device), you may change the subnet ipv4 address from 192.168.1.1 to something of your choice.  Then click "Save & Apply" and reconnect to your device using the address you configured.

/!\ If the LAN interface is connected to an access point and you want this interface to be on the mesh, then DO NOT edit it yet.

[[!img lan_phys_iface.jpg align="left" size="950x" alt="Edit LAN physicial interface"]]

## Set the wifi

In the tab "Network", click "Wifi" and then click to edit the wireless SSID.

[[!img select_wifi.jpg align="left" size="950x" alt="Select wifi"]]

First, click on the "Enable" button to enable the wireless network, then configure the ESSID (relais.reseaulibre.ca), mode (Ad-hoc) and BSSID (02:CA:FF:EE:BA:BE) for the mesh.  For the associated network, select the interface you have previously created to manage the wireless mesh interface (maybe wifi).

[[!img setup_wifi.jpg align="left" size="950x" alt="Configure wifi"]]


## Configure babel, through ssh

To enable and configure babel, you need to access the router through ssh.  Type
   
    ssh root@192.168.1.1

If you installed the Reseau Libre custom images, there is a script to automatically configure babel.  You just need to know the interfaces you want to put up.  For instance

    root@clarence:~# setup_babel wlan0 eth0

will add both eth0 and wlan0 to the babel mesh.

Reboot the device

    root@clarence:~# reboot & exit


## Adding the lan interface to babel (optional)

If you want the ethernet interface to be on babel too, you need to configure it with a /32 ip address.

First, you need to pick a free slot from the [[IP Allocation|policy/numbering]] page again for this interface.  Through the web interface, go to "Network" tab, "Interfaces" sub-tab and edit the LAN interface.  Enter the IP you selected and for the netmask, select custom and enter 255.255.255.255.

You may disable the dhcp server for this interface.

Before clicking "Save & apply", remember that by doing this, both interfaces are now on babel.  Unless your device has another interface you can reach it through, you may not be able to connect to it, except through other babel devices.  Make sure you know what you're doing at this point and trust this wiki and know everything's gonna be all right.

[[!img final_lan_config.jpg align="left" size="950x" alt="Configure LAN on babel interface"]]


# Test the mesh

Your device should now be part of the mesh.  Once rebooted, its mesh interfaces should be up and running.  If you have installed batman-adv on your computer, you may enable it and see if you can connect through the mesh.

# Secure your device

Read the guide on [[Securing your device|securing+device]] to know how to setup the firewall, protect the web gui and ssh console, etc.

# Physical installation checklist

## Planning a new rooftop installation

0. Do you have pictures of the precise installation location?
0. Do you have clearance from the building owner?
0. Have you figured where the network cable will run?
0. Did you test the mesh software on the router?
0. Do you have the hardware to mount the antenna? (TODO: make list; elecnix has one)
0. Will you have sun or light for 3 hours?
